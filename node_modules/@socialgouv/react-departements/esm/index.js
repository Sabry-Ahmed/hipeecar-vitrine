function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

import React from "react";
import PropTypes from "prop-types";
import { SvgLoader, SvgProxy } from "react-svgmt";
import Carte from "./Carte";
import { hasPetiteCouronne, normalizeDpt } from "./departements";

var France = function France(_ref) {
  var color = _ref.color,
      highlightColor = _ref.highlightColor,
      departements = _ref.departements;
  var dpts = [].concat(_toConsumableArray(departements), _toConsumableArray(hasPetiteCouronne(departements) ? ["75-92-93-94"] : []));
  return React.createElement(SvgLoader, {
    svgXML: Carte
  }, React.createElement(SvgProxy, {
    selector: "#carte",
    fill: color
  }), dpts.map(function (dpt) {
    return React.createElement(SvgProxy, {
      key: dpt,
      selector: "#dpt-".concat(normalizeDpt(dpt)),
      fill: highlightColor
    });
  }));
};

France.propTypes = {
  color: PropTypes.string,
  departements: PropTypes.array,
  highlightColor: PropTypes.string
};
France.defaultProps = {
  color: "#74B4FF",
  highlightColor: "#b3ff75",
  departements: []
};
export default France;